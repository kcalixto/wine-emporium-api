AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 30

Resources:
  WineEmporiumApiFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-lambda-policy'
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'ssm:GetParameter'
                Resource: '*'

  WineEmporiumApiFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: .
      Handler: com.wineemporium.StreamLambdaHandler::handleRequest
      Role: !GetAtt WineEmporiumApiFunctionRole.Arn
      Runtime: java17
      # SnapStart:
      #   ApplyOn: PublishedVersions
      Architectures:
        - x86_64
      MemorySize: 2048
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
          DB_HOST: !Sub '{{resolve:ssm:/wine-emporium/db_host}}'
          DB_USER: !Sub '{{resolve:ssm:/wine-emporium/db_user}}'
          DB_PASS: !Sub '{{resolve:ssm:/wine-emporium/db_pass}}'
      Events:
        WineEmporiumApi:
          Type: Api 
          Properties:
            Path: /{proxy+}
            Method: ANY